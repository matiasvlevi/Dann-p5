const VERTICAL="vertical",HORIZONTAL="horizontal",SQUARE="square",FIXED="fixed",FIXED_UP="fixed_up",FIXED_DOWN="fixed_down";NetGraph=function(e,t,i,h){this.x=e,this.y=t,this.width=i,this.height=h,this.model=void 0,this.theme=JSON.parse(JSON.stringify(themes[CLASSIC])),this.convertToColor()},NetGraph.error=function(e,t){console.error(e+'\n Stopped p5js "draw" loop \n > '+t),console.warn(),noLoop()},NetGraph.colorScale=function(e,t,i,h,s,o){let n=o,r=Math.abs(i-t)*n,m=h._getRed(),a=(s._getRed()-m)/r*(e+i-1)+m,l=h._getGreen(),c=(s._getGreen()-l)/r*(e+i-1)+l,g=h._getBlue(),u=(s._getBlue()-g)/r*2*(e+i-1)+g,p=h._getAlpha(),d=(s._getAlpha()-p)/r*2*(e+i-1)+p;return color(a,c,u,d)},NetGraph.prototype.graphLayers=function(){const e=this.model.Layers;if(this.theme.spacing.layer=this.theme.orientation===VERTICAL?this.height/(e.length-1):this.width/(e.length-1),stroke(this.theme.colors.stroke.neuron),this.theme.mode===SQUARE){strokeWeight(this.theme.strokeWeight.neuron);for(let t=0;t<e.length;t++){let i=e[t].size-1,h=0;1===e[t].size&&(i=e[t].size+1,h=1);let s=this.orientation===VERTICAL?this.width/i:this.height/i;for(let i=h;i<e[t].size+h;i++){let o=this.theme.orientation===VERTICAL?i*s:t*this.theme.spacing.layer,n=this.theme.orientation===VERTICAL?t*this.theme.spacing.layer:i*s;if(this.theme.dynamic){let s=NetGraph.colorScale(e[t].layer.matrix[i-h][0],this.theme.valueBounds.neuron.min,this.theme.valueBounds.neuron.max,this.theme.colors.neuron.min,this.theme.colors.neuron.max,this.theme.spread);fill(s)}else fill(this.theme.colors.neuron.max);ellipse(o+this.x,n+this.y,this.theme.size.neuron,this.theme.size.neuron)}}}else if(this.theme.mode===FIXED_UP){strokeWeight(this.theme.strokeWeight.neuron);for(let t=0;t<e.length;t++){let i=e[t].size-1,h=0;1===e[t].size&&(i=e[t].size+1,h=1);let s=this.theme.spacing.neuron;for(let i=h;i<e[t].size+h;i++){let o=this.theme.orientation===VERTICAL?i*s:t*this.theme.spacing.layer,n=this.theme.orientation===VERTICAL?t*this.theme.spacing.layer:i*s;if(this.theme.dynamic){let s=NetGraph.colorScale(e[t].layer.matrix[i-h][0],this.theme.valueBounds.neuron.min,this.theme.valueBounds.neuron.max,this.theme.colors.neuron.min,this.theme.colors.neuron.max,this.theme.spread);fill(s)}else fill(this.theme.colors.neuron.max);ellipse(o+this.x,n+this.y,this.theme.size.neuron,this.theme.size.neuron)}}}else if(this.theme.mode===FIXED){strokeWeight(this.theme.strokeWeight.neuron);for(let t=0;t<e.length;t++){let i=e[t].size-1,h=0;1===e[t].size&&(i=e[t].size+1,h=1);let s=this.theme.orientation===VERTICAL?.5*(this.width/this.theme.spacing.neuron-e[t].size):.5*(this.height/this.theme.spacing.neuron-e[t].size);for(let i=h;i<e[t].size+h;i++){let o=this.theme.orientation===VERTICAL?(i+s)*this.theme.spacing.neuron:t*this.theme.spacing.layer,n=this.theme.orientation===VERTICAL?t*this.theme.spacing.layer:(i+s)*this.theme.spacing.neuron;if(this.theme.dynamic){let s=NetGraph.colorScale(e[t].layer.matrix[i-h][0],this.theme.valueBounds.neuron.min,this.theme.valueBounds.neuron.max,this.theme.colors.neuron.min,this.theme.colors.neuron.max,this.theme.spread);fill(s)}else fill(this.theme.colors.neuron.max);ellipse(o+this.x,n+this.y,this.theme.size.neuron,this.theme.size.neuron)}}}},NetGraph.prototype.graphWeights=function(){if(this.model.weights.length>0){const e=this.model.weights,t=this.model.Layers;if(this.theme.spacing.layer=this.theme.orientation===VERTICAL?this.height/(t.length-1):this.width/(t.length-1),this.theme.mode===SQUARE){push(),this.theme.dynamic||(stroke(this.theme.colors.weights.min),strokeWeight(this.theme.strokeWeight.weight));for(let i=0;i<e.length;i++){let h=t[i+1].size-1,s=0;1===t[i+1].size&&(h=t[i+1].size+1,s=1);let o=this.theme.orientation===VERTICAL?this.width/h:this.height/h;for(let h=s;h<e[i].rows+s;h++){let n=this.theme.orientation===VERTICAL?h*o:(i+1)*this.theme.spacing.layer,r=this.theme.orientation===VERTICAL?(i+1)*this.theme.spacing.layer:h*o,m=t[i].size-1,a=0;1===t[i].size&&(m=t[i].size+1,a=1);let l=this.theme.orientation===VERTICAL?this.width/m:this.height/m;for(let t=a;t<e[i].cols+a;t++){let o=this.theme.orientation===VERTICAL?t*l:i*this.theme.spacing.layer,m=this.theme.orientation===VERTICAL?i*this.theme.spacing.layer:t*l;if(this.theme.dynamic){let o=NetGraph.colorScale(e[i].matrix[h-s][t-a],this.theme.valueBounds.weight.min,this.theme.valueBounds.weight.max,this.theme.colors.weights.min,this.theme.colors.weights.max,this.theme.spread);stroke(o),strokeWeight(this.theme.strokeWeight.weight)}line(n+this.x,r+this.y,o+this.x,m+this.y)}}}pop()}else if(this.theme.mode===FIXED_UP){push(),this.theme.dynamic||(stroke(this.theme.colors.weights.min),strokeWeight(this.theme.strokeWeight.weight));for(let i=0;i<e.length;i++){let h=t[i+1].size-1,s=0;1===t[i+1].size&&(h=t[i+1].size+1,s=1);let o=this.theme.spacing.neuron;for(let h=s;h<e[i].rows+s;h++){let n=this.theme.orientation===VERTICAL?h*o:(i+1)*this.theme.spacing.layer,r=this.theme.orientation===VERTICAL?(i+1)*this.theme.spacing.layer:h*o,m=t[i].size-1,a=0;1===t[i].size&&(m=t[i].size+1,a=1);let l=this.theme.spacing.neuron;for(let t=a;t<e[i].cols+a;t++){let o=this.theme.orientation===VERTICAL?t*l:i*this.theme.spacing.layer,m=this.theme.orientation===VERTICAL?i*this.theme.spacing.layer:t*l;if(this.theme.dynamic){let o=NetGraph.colorScale(e[i].matrix[h-s][t-a],this.theme.valueBounds.weight.min,this.theme.valueBounds.weight.max,this.theme.colors.weights.min,this.theme.colors.weights.max,this.theme.spread);stroke(o),strokeWeight(this.theme.strokeWeight.weight)}line(n+this.x,r+this.y,o+this.x,m+this.y)}}}pop()}else if(this.theme.mode===FIXED){push(),this.theme.dynamic||(stroke(this.theme.colors.weights.min),strokeWeight(this.theme.strokeWeight.weight));for(let i=0;i<e.length;i++){let h=t[i+1].size-1,s=0;1===t[i+1].size&&(h=t[i+1].size+1,s=1);let o=this.theme.spacing.neuron,n=this.theme.orientation===VERTICAL?.5*(this.width/o-t[i+1].size):.5*(this.height/o-t[i+1].size);for(let h=s;h<e[i].rows+s;h++){let r=this.theme.orientation===VERTICAL?(h+n)*o:(i+1)*this.theme.spacing.layer,m=this.theme.orientation===VERTICAL?(i+1)*this.theme.spacing.layer:(h+n)*o,a=t[i].size-1,l=0;1===t[i].size&&(a=t[i].size+1,l=1);let c=this.theme.spacing.neuron,g=this.theme.orientation===VERTICAL?.5*(this.width/c-t[i].size):.5*(this.height/c-t[i].size);for(let t=l;t<e[i].cols+l;t++){let o=this.theme.orientation===VERTICAL?(t+g)*c:i*this.theme.spacing.layer,n=this.theme.orientation===VERTICAL?i*this.theme.spacing.layer:(t+g)*c;if(this.theme.dynamic){let o=NetGraph.colorScale(e[i].matrix[h-s][t-l],this.theme.valueBounds.weight.min,this.theme.valueBounds.weight.max,this.theme.colors.weights.min,this.theme.colors.weights.max,this.theme.spread);stroke(o),strokeWeight(this.theme.strokeWeight.weight)}line(r+this.x,m+this.y,o+this.x,n+this.y)}}}pop()}}else NetGraph.error("The weights of the model do not exist, try Dann.prototype.makeWeights() to initialize the weights.","NetGraph.prototype.graphWeights")},NetGraph.prototype.setModel=function(e){this.model=e},NetGraph.prototype.setMode=function(e){this.theme.mode=e},NetGraph.prototype.setSpread=function(e){this.theme.spread=e},NetGraph.prototype.setTheme=function(e=CLASSIC){"object"!=typeof e?(this.theme=themes[e],this.convertToColor()):this.theme=e},NetGraph.prototype.setPos=function(e,t){this.x=e,this.y=t},NetGraph.prototype.setStrokeWeight=function(e,t){this.theme.strokeWeight[e]=t},NetGraph.prototype.setSpacing=function(e){this.theme.spacing.neuron=e},NetGraph.prototype.setOrientation=function(e){this.theme.orientation=e},NetGraph.prototype.neuronSize=function(e){this.theme.size.neuron=e},NetGraph.prototype.convertToColor=function(){this.setColor("background",this.theme.colors.background),this.setColor("neuron.min",this.theme.colors.neuron.min),this.setColor("neuron.max",this.theme.colors.neuron.max),this.setColor("weights.min",this.theme.colors.weights.min),this.setColor("weights.max",this.theme.colors.weights.max),this.setColor("stroke.contour",this.theme.colors.stroke.contour),this.setColor("stroke.neuron",this.theme.colors.stroke.neuron)},NetGraph.prototype.setColor=function(e,t){let i=t instanceof p5.Color?t:color.apply(1,t);if(-1!==e.indexOf("."))return e=e.split("."),void(this.theme.colors[e[0]][e[1]]=i);this.theme.colors[e]=i},NetGraph.prototype.show=function(e){push(),fill(this.theme.colors.background),stroke(this.theme.colors.stroke.contour),rect(this.x,this.y,this.width,this.height),void 0!==this.model&&(this.graphWeights(),this.graphLayers()),pop()};const themes={classic:{colors:{background:[255,255,255,0],stroke:{contour:[0,0,0,0],neuron:[0,0,0,100]},weights:{min:[40,44,52,200],max:[255,120,70,200]},neuron:{min:[40,44,52,200],max:[255,120,70,200]},background:[255,255,255,0]},size:{neuron:12},strokeWeight:{neuron:3,weight:3},spacing:{neuron:18,layer:100},mode:"fixed",spread:.2,dynamic:!0,valueBounds:{neuron:{min:0,max:1},weight:{min:-1,max:1}}},standard:{colors:{stroke:{contour:[0,0,0,0],neuron:[0,0,0,100]},weights:{min:[34,56,247,200],max:[186,11,11,200]},neuron:{min:[34,56,247,200],max:[200,255,100]},background:[255,255,255,0]},size:{neuron:12},strokeWeight:{neuron:4,weight:3},spacing:{neuron:22,layer:100},mode:"square",spread:10,dynamic:!0,valueBounds:{neuron:{min:0,max:1},weight:{min:-1,max:1}}},modern:{colors:{stroke:{contour:[0,0,0,0],neuron:[0,0,0,100]},weights:{min:[56,62,86],max:[246,158,123]},neuron:{min:[56,62,86],max:[246,158,123]},background:[255,255,255,0]},size:{neuron:12},strokeWeight:{neuron:4,weight:3},spacing:{neuron:22,layer:100},mode:"square",spread:10,dynamic:!0,valueBounds:{neuron:{min:0,max:1},weight:{min:-1,max:1}}},robot:{colors:{stroke:{contour:[0,0,0,0],neuron:[110,120,135,50]},weights:{min:[129,136,150,50],max:[152,195,121,50]},neuron:{min:[129,136,150],max:[152,195,121]},background:[255,255,255,0]},size:{neuron:12},strokeWeight:{neuron:2,weight:3},spacing:{neuron:36,layer:100},mode:"square",spread:10,dynamic:!0,valueBounds:{neuron:{min:0,max:1},weight:{min:-1,max:1}}}},CLASSIC="classic",ROBOT="robot",MODERN="modern",STANDARD="standard";